# -*- coding: utf-8 -*-
"""avocado_priceanalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1duur1zfJ96xdWG5hOC9xKU6jPMPMLFjr
"""

import pandas as pd
import numpy as np
import matplotlib as mp
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('drive')

df = pd.read_csv('drive/My Drive/DATA/avocado.csv')

df.head(5)

df["Total Volume"].head(11)

pavgP = df.groupby(['region'])['AveragePrice'].mean()

from matplotlib import rcParams
rcParams['figure.figsize'] = 15,10

plt.style.use('fivethirtyeight')

pavgP.plot()

pavgV = df.groupby(['region'])['Total Volume'].mean()

from matplotlib import rcParams
rcParams['figure.figsize'] = 15,10

plt.style.use('fivethirtyeight')
pavgV.plot()

albany_df = df.copy(['region']== "Albany")

albany_df = df[df["region"]=="Albany"]
albany_df.set_index("Date",inplace=True)
albany_df.sort_index(inplace=True)

from matplotlib import rcParams
rcParams['figure.figsize'] = 15,10

plt.style.use('fivethirtyeight')
albany_df['AveragePrice'].rolling(20).mean().plot()

albany_df = df.copy()[df['region']=="Albany"]
albany_df["price25ma"] = albany_df["AveragePrice"].rolling(25).mean()

albany_df.tail()

albany_df.dropna()

df['region'].unique()

df = df.copy()[df['type']=='organic']
df["Date"] = pd.to_datetime(df["Date"])

df.sort_values(by="Date", ascending=True, inplace=True)
df.head()

df['region'].unique()

graph_df = pd.DataFrame()

for region in df['region'].unique():
    region_df = df.copy()[df['region']==region]
    region_df.set_index('Date', inplace=True)
    region_df.sort_index(inplace=True)
    region_df[f"{region}_price25ma"] = region_df["AveragePrice"].rolling(25).mean()

    if graph_df.empty:
        graph_df = region_df[[f"{region}_price25ma"]]  # note the double square brackets! (so df rather than series)
    else:
        graph_df = graph_df.join(region_df[f"{region}_price25ma"])

graph_df.tail()

from matplotlib import rcParams
rcParams['figure.figsize'] = 17,10

plt.style.use('fivethirtyeight')

graph_df.plot()

